; ============================================================================
; Common Configuration (shared by all environments)
; ============================================================================
; In general, it is required to always pin all the libraries and packages to the exact
; version to ensure reproducible builds.
; ============================================================================
[common]
; Platform Configuration
; NOTE: Official PlatformIO does not support Arduino 3.x yet due to issues with Espressif
; (https://github.com/platformio/platform-espressif32/issues/1225), so we use pioarduino
platform = https://github.com/pioarduino/platform-espressif32/releases/download/55.03.32/platform-espressif32.zip
board = esp32-s3-devkitc-1                     ; Do not try other boards - ESP32-S3-N16R2 specific config
framework = arduino

; ESP32-S3 Hardware Configuration
; NOTE: The following config is the ONLY way to use the 2MB PSRAM of the ESP32-S3-N16R2
board_build.arduino.memory_type = qio_qspi     ; Required for 2MB PSRAM on ESP32-S3-N16R2
board_build.psram_type = qio                   ; PSRAM configuration
board_build.flash_mode = qio                   ; Flash interface mode
board_upload.flash_size = 16MB                 ; Real flash size
board_upload.maximum_size = 16777216           ; Maximum upload size
board_build.partitions = partitions.csv        ; Custom partition table

; Development Tools
monitor_speed = 115200
monitor_filters = esp32_exception_decoder, log2file    ; Useful for decoding crash data and logging

; Library Configuration
lib_compat_mode = strict                       ; Required by ESPAsyncWebServer
lib_ldf_mode = chain                           ; Required by ESPAsyncWebServer

; Dependencies
lib_deps = 
	; === Core Libraries ===
	jijio/AdvancedLogger@2.0.1               ; Better logging with PSRAM support
	bblanchon/ArduinoJson@7.4.2              ; JSON processing
	bblanchon/StreamUtils@1.9.0              ; Bigger buffers, improving MQTT throughput
	
	; === Network & Communication ===
	esp32async/AsyncTCP@3.4.8                ; Required by ESPAsyncWebServer
	esp32async/ESPAsyncWebServer@3.8.1       ; Async HTTP web server
	knolleary/PubSubClient@2.8.0             ; MQTT client
	tzapu/WiFiManager@2.0.17                 ; WiFi configuration via web portal
	miq19/eModbus@1.7.4                      ; Modbus TCP support
	
	; === Utilities ===
	tobozo/ESP32-targz@1.2.9                ; Archive extraction for long-term data storage

; Embedded Files (Web Interface ONLY - shared by all environments)
board_build.embed_txtfiles =
	; === Web Interface Styles ===
	css/button.css
	css/styles.css
	css/section.css
	css/typography.css
	
	; === Web Interface Scripts ===
	js/api-client.js
	
	; === Web Interface Pages ===
	html/ade7953-tester.html
	html/calibration.html
	html/channel.html
	html/configuration.html
	html/index.html
	html/info.html
	html/log.html
	html/swagger.html
	html/update.html
	html/waveform.html
	
	; === Resources ===
	resources/favicon.svg
	resources/swagger.yaml

; Common build flags
common_build_flags =
	; === Hardware Configuration ===
	-DBOARD_HAS_PSRAM
	
	; === Logger Configuration ===
	-DADVANCED_LOGGER_DISABLE_VERBOSE
	-DADVANCED_LOGGER_ALLOCABLE_HEAP_SIZE=16384

	; === Environment Info ===
	-D BUILD_ENV_NAME=$PIOENV ; Useful for giving directly the path to analyse the ELF file

; Common compiler warnings (source-only)
; NOTE: Applies only to the current project, not the libraries
common_build_src_flags =
	-Wall                                     ; Enable most warnings
	-Wextra                                   ; Additional useful warnings
	-Wformat                                  ; Check printf/scanf format strings
	-Wformat-security                         ; Security issues in format strings
	-Wconversion                              ; Type conversion warnings


; ============================================================================
; Development Environment (ESP32-S3)
; Use for: Development, debugging, troubleshooting
; Features: No optimization, full debug symbols, verbose logging
; ============================================================================
[env:esp32s3-dev]
; Platform Configuration
platform = ${common.platform}
board = ${common.board}
framework = ${common.framework}

; Static Analysis Tools
check_tool = cppcheck, clangtidy             ; Static code analysis for better code quality

; Build Configuration
build_flags =
	${common.common_build_flags}
	
	; === Compilation & Debug Options ===
	-g3                                       ; Maximum debug information
	-O0                                       ; No optimizations (easier debugging)
	-fstack-usage                             ; Generate stack usage files (.su)
	
	; === Application Defines ===
	-DHAS_SECRETS                             ; Secrets are embedded in this build
	-DENV_DEV                                 ; Development environment
	
	; === ESP32 Debug Configuration ===
	-DCORE_DEBUG_LEVEL=4                      ; Verbose logging
	-DDEBUG_ESP_PORT=Serial
	-DDEBUG_ESP_CORE

; Source-only compiler warnings (excludes libraries)
build_src_flags =
	${common.common_build_src_flags}

; Hardware Configuration
board_build.arduino.memory_type = ${common.board_build.arduino.memory_type}
board_build.psram_type = ${common.board_build.psram_type}
board_build.flash_mode = ${common.board_build.flash_mode}
board_upload.flash_size = ${common.board_upload.flash_size}
board_upload.maximum_size = ${common.board_upload.maximum_size}
board_build.partitions = ${common.board_build.partitions}

; Development Tools
monitor_speed = ${common.monitor_speed}
monitor_filters = ${common.monitor_filters}

; Library Configuration
lib_compat_mode = ${common.lib_compat_mode}
lib_ldf_mode = ${common.lib_ldf_mode}
lib_deps = ${common.lib_deps}

; Embedded Files (Web Interface + Secrets)
board_build.embed_txtfiles =
	${common.board_build.embed_txtfiles}
	
	; === Secrets (Provisioning certificates - NOT DEVICE SPECIFIC) ===
	secrets/privateclaim.pem
	secrets/certclaim.pem
	secrets/encryptionkey.txt


; ============================================================================
; Development Environment WITHOUT Secrets (ESP32-S3)
; Use for: Open-source development, testing without secrets
; Features: No optimization, full debug symbols, verbose logging, NO embedded secrets
; ============================================================================
[env:esp32s3-dev-nosecrets]
; Platform Configuration
platform = ${common.platform}
board = ${common.board}
framework = ${common.framework}

; Static Analysis Tools
check_tool = cppcheck, clangtidy             ; Static code analysis for better code quality

; Build Configuration
build_flags =
	${common.common_build_flags}
	
	; === Compilation & Debug Options ===
	-g3                                       ; Maximum debug information
	-O0                                       ; No optimizations (easier debugging)
	-fstack-usage                             ; Generate stack usage files (.su)
	
	; === Application Defines ===
	-DENV_DEV                                 ; Development environment
	; NOTE: HAS_SECRETS is NOT defined - secrets must be provisioned at runtime
	
	; === ESP32 Debug Configuration ===
	-DCORE_DEBUG_LEVEL=4                      ; Verbose logging
	-DDEBUG_ESP_PORT=Serial
	-DDEBUG_ESP_CORE

; Source-only compiler warnings (excludes libraries)
build_src_flags =
	${common.common_build_src_flags}

; Hardware Configuration
board_build.arduino.memory_type = ${common.board_build.arduino.memory_type}
board_build.psram_type = ${common.board_build.psram_type}
board_build.flash_mode = ${common.board_build.flash_mode}
board_upload.flash_size = ${common.board_upload.flash_size}
board_upload.maximum_size = ${common.board_upload.maximum_size}
board_build.partitions = ${common.board_build.partitions}

; Development Tools
monitor_speed = ${common.monitor_speed}
monitor_filters = ${common.monitor_filters}

; Library Configuration
lib_compat_mode = ${common.lib_compat_mode}
lib_ldf_mode = ${common.lib_ldf_mode}
lib_deps = ${common.lib_deps}

; Embedded Files (Web Interface ONLY - NO secrets)
board_build.embed_txtfiles = ${common.board_build.embed_txtfiles}


; ============================================================================
; Production Environment (ESP32-S3)
; Use for: Production deployment, releases
; Features: Size optimization, minimal logging, assertions disabled
; ============================================================================
[env:esp32s3-prod]
; Platform Configuration
platform = ${common.platform}
board = ${common.board}
framework = ${common.framework}

; Static Analysis Tools
check_tool = cppcheck, clangtidy             ; Static code analysis for better code quality

; Build Configuration
build_flags =
	${common.common_build_flags}
	
	; === Compilation & Optimization Options ===
	-Os                                       ; Optimize for size
	-DNDEBUG                                  ; Disable assertions
	
	; === Application Defines ===
	-DHAS_SECRETS                             ; Secrets are embedded in this build
	-DENV_PROD                                ; Production environment
	
	; === ESP32 Debug Configuration ===
	-DCORE_DEBUG_LEVEL=2                      ; Error + Warning only

; Source-only compiler warnings (excludes libraries)
build_src_flags =
	${common.common_build_src_flags}

; Hardware Configuration
board_build.arduino.memory_type = ${common.board_build.arduino.memory_type}
board_build.psram_type = ${common.board_build.psram_type}
board_build.flash_mode = ${common.board_build.flash_mode}
board_upload.flash_size = ${common.board_upload.flash_size}
board_upload.maximum_size = ${common.board_upload.maximum_size}
board_build.partitions = ${common.board_build.partitions}

; Development Tools
monitor_speed = ${common.monitor_speed}
monitor_filters = ${common.monitor_filters}

; Library Configuration
lib_compat_mode = ${common.lib_compat_mode}
lib_ldf_mode = ${common.lib_ldf_mode}
lib_deps = ${common.lib_deps}

; Embedded Files (Web Interface + Secrets)
board_build.embed_txtfiles =
	${common.board_build.embed_txtfiles}
	
	; === Secrets (Provisioning certificates - NOT DEVICE SPECIFIC) ===
	secrets/privateclaim.pem
	secrets/certclaim.pem
	secrets/encryptionkey.txt


; ============================================================================
; Production Environment WITHOUT Secrets (ESP32-S3)
; Use for: Open-source builds
; Features: Size optimization, minimal logging, NO embedded secrets
; ============================================================================
[env:esp32s3-prod-nosecrets]
; Platform Configuration
platform = ${common.platform}
board = ${common.board}
framework = ${common.framework}

; Static Analysis Tools
check_tool = cppcheck, clangtidy             ; Static code analysis for better code quality

; Build Configuration
build_flags =
	${common.common_build_flags}
	
	; === Compilation & Optimization Options ===
	-Os                                       ; Optimize for size
	-DNDEBUG                                  ; Disable assertions
	
	; === Application Defines ===
	-DENV_PROD                                ; Production environment
	; NOTE: HAS_SECRETS is NOT defined - secrets must be provisioned at runtime
	
	; === ESP32 Debug Configuration ===
	-DCORE_DEBUG_LEVEL=2                      ; Error + Warning only

; Source-only compiler warnings (excludes libraries)
build_src_flags =
	${common.common_build_src_flags}

; Hardware Configuration
board_build.arduino.memory_type = ${common.board_build.arduino.memory_type}
board_build.psram_type = ${common.board_build.psram_type}
board_build.flash_mode = ${common.board_build.flash_mode}
board_upload.flash_size = ${common.board_upload.flash_size}
board_upload.maximum_size = ${common.board_upload.maximum_size}
board_build.partitions = ${common.board_build.partitions}

; Development Tools
monitor_speed = ${common.monitor_speed}
monitor_filters = ${common.monitor_filters}

; Library Configuration
lib_compat_mode = ${common.lib_compat_mode}
lib_ldf_mode = ${common.lib_ldf_mode}
lib_deps = ${common.lib_deps}

; Embedded Files (Web Interface ONLY - NO secrets)
board_build.embed_txtfiles = ${common.board_build.embed_txtfiles}


; ============================================================================
; Legacy/Commented Configurations (for reference)
; ============================================================================

; [env:esp32dev_nosecrets]
; NOTE: Old development environment without secrets embedded
; Kept for reference - replaced by esp32s3-dev
; platform = espressif32
; board = esp32-s3-devkitc-1 ; For some reason, the esp32-s3-devkitc1-n16r2 does not upload properly
; framework = arduino
; check_tool = cppcheck, clangtidy ; I don't know exactly what these do, but they seem to be useful for static analysis
; build_flags = 
; 	-g3 
; 	-ggdb
;     -O0
;     -DCORE_DEBUG_LEVEL=4
;     -DDEBUG_ESP_PORT=Serial
;     -DDEBUG_ESP_CORE
;     -DBOARD_HAS_PSRAM
; build_src_flags = ; Applies only to the current project, not the libraries
;     -Wall
;     -Wextra
;     -Wformat
;     -Wformat-security
;     -Wconversion
; ; The only way to use the 2MB PSRAM of the ESP32-S3-N16R2 was using the following configs
; board_build.arduino.memory_type = qio_qspi
; board_build.flash_mode = qio
; board_build.psram_type = qio
; board_upload.flash_size = 16MB
; board_upload.maximum_size = 16777216
; board_build.partitions = partitions.csv
; monitor_filters = esp32_exception_decoder, colors, log2file ; Useful for decoding the crash data when using the serial monitor and for better readability (colors is custom)
; lib_compat_mode = strict ; Requested by ESPAsyncWebServer
; lib_ldf_mode = chain ; Requested by ESPAsyncWebServer
; lib_deps = 
; 	jijio/AdvancedLogger@^2.0.0
; 	knolleary/PubSubClient@^2.8
; 	https://github.com/tzapu/WiFiManager.git@^2.0.17
;   	esp32async/AsyncTCP@^3.4.5
; 	esp32async/ESPAsyncWebServer@^3.7.10
; 	bblanchon/ArduinoJson@^7.2.0
; 	miq19/eModbus@^1.7.2
; board_build.embed_txtfiles =
; 	; CSS
; 	css/button.css
; 	css/styles.css
; 	css/section.css
; 	css/typography.css
; 	; JavaScript
; 	js/api-client.js
; 	; HTML
; 	html/ade7953-tester.html
; 	html/calibration.html
; 	html/channel.html
; 	html/configuration.html
; 	html/index.html
; 	html/info.html
; 	html/log.html
; 	html/swagger.html
; 	html/update.html
; 	; Resources
; 	resources/favicon.svg
; 	resources/swagger.yaml
; 	; Secrets
;     secrets/privateclaim.pem
;     secrets/certclaim.pem
;     secrets/ca.pem
; 	secrets/encryptionkey.txt
; 	secrets/endpoint.txt
; 	secrets/rulemeter.txt
; monitor_speed = 115200


; [env:native]
; platform = native
; test_framework = unity
; build_flags = 
;     -DUNIT_TEST
; test_ignore = test_embedded
; test_filter = test_native*