openapi: 3.0.0
info:
  title: EnergyMe - Home | API
  description: API documentation for EnergyMe - Home
  version: 1.1.0

servers:
  - url: /
    description: Current server (auto-detected from browser)

paths:
  # Health check endpoint
  /api/v1/health:
    get:
      summary: Health check
      description: Check if the API is running and responsive
      tags:
        - System
      responses:
        '200':
          description: Service is healthy
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "ok"
                  uptime:
                    type: integer
                    format: seconds
                  timestamp:
                    type: string
                    format: date-time

  # Authentication endpoints  
  /api/v1/auth/status:
    get:
      summary: Get authentication status
      description: Check if the current session is authenticated
      tags:
        - Authentication
      responses:
        '200':
          description: Authentication status
          content:
            application/json:
              schema:
                type: object
                properties:
                  usingDefaultPassword:
                    type: boolean
                  username:
                    type: string

  /api/v1/auth/change-password:
    post:
      summary: Change password
      description: Change the authentication password (requires current password for security)
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - currentPassword
                - newPassword
              properties:
                currentPassword:
                  type: string
                  description: Current password for verification
                newPassword:
                  type: string
                  description: New password to set
            example:
              currentPassword: "oldpassword123"
              newPassword: "newpassword456"
      responses:
        '200':
          description: Password changed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Password changed successfully"
        '400':
          description: Bad request (missing parameters or password validation failed)
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "New password does not meet requirements or failed to save"
        '401':
          description: Current password is incorrect
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Current password is incorrect"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Failed to retrieve current password"

  /api/v1/auth/reset-password:
    post:
      summary: Reset password to default
      description: Reset the authentication password to the default value
      tags:
        - Authentication
      responses:
        '200':
          description: Password reset successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Password reset to default"
        '500':
          description: Failed to reset password
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string

  # OTA (Over-The-Air) Update endpoints
  /api/v1/ota/upload:
    post:
      summary: Upload firmware for OTA update
      description: |
        Upload a new firmware binary for over-the-air update.
        
        **Requirements:**
        - File must be in .bin format
        - Minimum file size: 100KB
        - File must contain valid ESP32 firmware
        - Optional: Include X-MD5 header for verification
      tags:
        - OTA Updates
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                firmware:
                  type: string
                  format: binary
                  description: Firmware binary file (.bin format, minimum 100KB)
      parameters:
        - in: header
          name: X-MD5
          required: false
          schema:
            type: string
            pattern: '^[a-f0-9]{32}$'
          description: Optional MD5 hash of the firmware file for verification
      responses:
        '200':
          description: Firmware uploaded and applied successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Firmware update successful"
        '400':
          description: Bad request (invalid file format, empty file, insufficient size, missing headers, etc.)
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    examples:
                      empty_file: 
                        value: "Missing Content-Length header or empty file"
                      too_small:
                        value: "Firmware file too small"
                      wrong_format:
                        value: "File must be in .bin format"
                      insufficient_memory:
                        value: "Insufficient memory for update"
                      no_data:
                        value: "No firmware data received or empty file uploaded"

  /api/v1/ota/status:
    get:
      summary: Get OTA update status
      description: Get information about the current firmware and update status
      tags:
        - OTA Updates
      responses:
        '200':
          description: OTA status information
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "idle"
                  canRollback:
                    type: boolean
                    example: true
                  currentPartition:
                    type: string
                    example: "app0"
                  hasError:
                    type: boolean
                    example: false
                  lastError:
                    type: string
                    example: "No Error"
                  size:
                    type: integer
                    example: 0
                  progress:
                    type: integer
                    example: 0
                  remaining:
                    type: integer
                    example: 0
                  progressPercent:
                    type: integer
                    example: 0
                  currentVersion:
                    type: string
                    example: "00.11.04"
                  currentMD5:
                    type: string
                    example: "ad1783afd0b38f856d5010921712e2ed"

  /api/v1/ota/rollback:
    post:
      summary: Rollback firmware
      description: Rollback to the previous firmware version
      tags:
        - OTA Updates
      responses:
        '200':
          description: Rollback initiated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Rollback initiated. Device will restart."
        '400':
          description: Rollback not possible
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Rollback not possible"

  # System Management endpoints
  /api/v1/system/info:
    get:
      summary: Get system information
      description: Get detailed system information including firmware, hardware, and build details
      tags:
        - System
      responses:
        '200':
          description: System information
          content:
            application/json:
              schema:
                type: object
                properties:
                  firmware:
                    type: object
                  hardware:
                    type: object
                  build:
                    type: object
                  uptime:
                    type: object

  /api/v1/system/statistics:
    get:
      summary: Get system statistics
      description: Get runtime statistics and performance metrics
      tags:
        - System
      responses:
        '200':
          description: System statistics
          content:
            application/json:
              schema:
                type: object
                properties:
                  ade7953TotalInterrupts:
                    type: integer
                  ade7953TotalHandledInterrupts:
                    type: integer
                  ade7953ReadingCount:
                    type: integer
                  ade7953ReadingCountFailure:
                    type: integer
                  mqttMessagesPublished:
                    type: integer
                  mqttMessagesPublishedError:
                    type: integer
                  customMqttMessagesPublished:
                    type: integer
                  customMqttMessagesPublishedError:
                    type: integer
                  modbusRequests:
                    type: integer
                  modbusRequestsError:
                    type: integer
                  influxdbUploadCount:
                    type: integer
                  influxdbUploadCountError:
                    type: integer
                  wifiConnection:
                    type: integer
                  wifiConnectionError:
                    type: integer
                  webServerRequests:
                    type: integer
                  webServerRequestsError:
                    type: integer
                  logVerbose:
                    type: integer
                  logDebug:
                    type: integer
                  logInfo:
                    type: integer
                  logWarning:
                    type: integer
                  logError:
                    type: integer
                  logFatal:
                    type: integer

  /api/v1/system/restart:
    post:
      summary: Restart the system
      description: Initiate a system restart
      tags:
        - System
      responses:
        '200':
          description: Restart initiated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "System restart initiated"

  /api/v1/system/factory-reset:
    post:
      summary: Factory reset
      description: Reset the system to factory defaults (clears all configuration)
      tags:
        - System
      responses:
        '200':
          description: Factory reset initiated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Factory reset initiated"

  /api/v1/system/secrets:
    get:
      summary: Check secrets availability
      description: Check if the system has secrets/certificates available
      tags:
        - System
      responses:
        '200':
          description: Secrets status
          content:
            application/json:
              schema:
                type: object
                properties:
                  hasSecrets:
                    type: boolean

  # Network Management endpoints
  /api/v1/network/wifi/reset:
    post:
      summary: Reset WiFi configuration
      description: Reset WiFi settings and restart the WiFi connection
      tags:
        - Network
      responses:
        '200':
          description: WiFi reset initiated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "WiFi configuration reset"

  # Crash Monitor endpoints
  /api/v1/crash/info:
    get:
      summary: Get crash analysis information
      description: Retrieve comprehensive crash information including reset reason, backtrace, and core dump availability
      tags:
        - System
      responses:
        '200':
          description: Crash information retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  resetReason:
                    type: string
                    example: "Exception/panic"
                  resetReasonCode:
                    type: integer
                    example: 4
                  crashCount:
                    type: integer
                    example: 2
                  consecutiveCrashCount:
                    type: integer
                    example: 1
                  resetCount:
                    type: integer
                    example: 15
                  consecutiveResetCount:
                    type: integer
                    example: 3
                  hasCoreDump:
                    type: boolean
                    example: true
                  coreDumpSize:
                    type: integer
                    example: 4096
                  coreDumpAddress:
                    type: integer
                    example: 851968
                  taskName:
                    type: string
                    example: "main_task"
                  programCounter:
                    type: integer
                    format: hex
                    example: 1073459200
                  backtrace:
                    type: object
                    properties:
                      depth:
                        type: integer
                        example: 8
                      corrupted:
                        type: boolean
                        example: false
                      addresses:
                        type: array
                        items:
                          type: integer
                          format: hex
                        example: [1073459200, 1073459184, 1073459168]
                      debugCommand:
                        type: string
                        example: "xtensa-esp32-elf-addr2line -pfC -e .pio/build/esp32dev/firmware.elf 0x40080000 0x40080010"
        '500':
          description: Failed to retrieve crash information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/v1/crash/dump:
    get:
      summary: Get core dump data
      description: Retrieve core dump binary data as base64-encoded chunks with pagination support
      tags:
        - System
      parameters:
        - name: offset
          in: query
          description: Starting byte offset in the core dump
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - name: size
          in: query
          description: Chunk size in bytes
          required: false
          schema:
            type: integer
            default: 2048
            minimum: 1
            maximum: 8192
      responses:
        '200':
          description: Core dump chunk retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  totalSize:
                    type: integer
                    description: Total size of the core dump
                    example: 4096
                  offset:
                    type: integer
                    description: Starting offset of this chunk
                    example: 0
                  requestedChunkSize:
                    type: integer
                    description: Requested chunk size
                    example: 1024
                  actualChunkSize:
                    type: integer
                    description: Actual chunk size returned
                    example: 1024
                  hasMore:
                    type: boolean
                    description: Whether more data is available
                    example: true
                  encoding:
                    type: string
                    description: Data encoding format
                    example: "base64"
                  data:
                    type: string
                    description: Base64-encoded core dump data
                    example: "SGVsbG8gV29ybGQ="
        '404':
          description: No core dump available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Failed to retrieve core dump data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/v1/crash/clear:
    post:
      summary: Clear core dump from flash
      description: Remove the stored core dump from flash memory
      tags:
        - System
      responses:
        '200':
          description: Core dump cleared successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Core dump cleared successfully"
        '404':
          description: No core dump available to clear
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '405':
          description: Method not allowed (use POST)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  # Logging endpoints
  /api/v1/logs/level:
    get:
      summary: Get current log levels
      description: Get the current print and save log levels
      tags:
        - Logging
      responses:
        '200':
          description: Current log levels
          content:
            application/json:
              schema:
                type: object
                properties:
                  print:
                    type: string
                    enum: [VERBOSE, DEBUG, INFO, WARNING, ERROR, FATAL]
                    example: "INFO"
                  save:
                    type: string
                    enum: [VERBOSE, DEBUG, INFO, WARNING, ERROR, FATAL]
                    example: "WARNING"
    put:
      summary: Set log levels
      description: Update the print and/or save log levels
      tags:
        - Logging
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                print:
                  type: string
                  enum: [VERBOSE, DEBUG, INFO, WARNING, ERROR, FATAL]
                  description: Set the print log level (optional)
                save:
                  type: string
                  enum: [VERBOSE, DEBUG, INFO, WARNING, ERROR, FATAL]  
                  description: Set the save log level (optional)
            example:
              print: "DEBUG"
              save: "ERROR"
      responses:
        '200':
          description: Log levels updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Log levels updated: print=DEBUG save=ERROR"
        '400':
          description: Invalid log level or missing parameters
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  error:
                    type: string
                    example: "Invalid log level specified. Valid levels: VERBOSE, DEBUG, INFO, WARNING, ERROR, FATAL"

  /api/v1/logs/clear:
    post:
      summary: Clear logs
      description: Clear all stored log entries
      tags:
        - Logging
      responses:
        '200':
          description: Logs cleared successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Logs cleared successfully"

  # Custom MQTT endpoints
  /api/v1/mqtt/config:
    get:
      summary: Get custom MQTT configuration
      description: Retrieve the current custom MQTT configuration settings
      tags:
        - Custom MQTT
      responses:
        '200':
          description: Current custom MQTT configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomMqttConfiguration'
    put:
      summary: Update custom MQTT configuration
      description: Update the custom MQTT configuration settings
      tags:
        - Custom MQTT
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomMqttConfiguration'
            example:
              enabled: true
              server: "mqtt.example.com"
              port: 1883
              clientid: "energyme-home"
              topic: "energy/meter"
              frequency: 10
              useCredentials: true
              username: "mqtt_user"
              password: "mqtt_password"
      responses:
        '200':
          description: Configuration updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '400':
          description: Invalid configuration data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/v1/mqtt/status:
    get:
      summary: Get custom MQTT status
      description: Get the current status and runtime information for custom MQTT
      tags:
        - Custom MQTT
      responses:
        '200':
          description: Custom MQTT status and runtime information
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: Status of the last connection attempt
                    example: "Connected"
                  statusTimestamp:
                    type: string
                    format: date-time
                    description: Timestamp of the last connection attempt
                example:
                  status: "Connected"
                  statusTimestamp: "2025-07-31T12:34:56Z"

  # InfluxDB endpoints
  /api/v1/influxdb/config:
    get:
      summary: Get InfluxDB configuration
      description: Retrieve the current InfluxDB configuration settings
      tags:
        - InfluxDB
      responses:
        '200':
          description: Current InfluxDB configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InfluxDbConfiguration'
    put:
      summary: Update InfluxDB configuration
      description: Update the InfluxDB configuration settings
      tags:
        - InfluxDB
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InfluxDbConfiguration'
            example:
              enabled: true
              server: "localhost"
              port: 8086
              version: 2
              database: "energyme-home"
              username: "user"
              password: "password"
              organization: "my-org"
              bucket: "energyme-home"
              token: "my-token"
              measurement: "meter"
              frequency: 15
              useSSL: false
      responses:
        '200':
          description: Configuration updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '400':
          description: Invalid configuration data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/v1/influxdb/status:
    get:
      summary: Get InfluxDB status
      description: Get the current status and runtime information for InfluxDB
      tags:
        - InfluxDB
      responses:
        '200':
          description: InfluxDB status and runtime information
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: Status of the last operation
                    example: "Data sent successfully"
                  statusTimestamp:
                    type: string
                    format: date-time
                    description: Timestamp of the last operation
                example:
                  status: "Data sent successfully"
                  statusTimestamp: "2025-07-31T12:34:56Z"

  # LED Management endpoints
  /api/v1/led/brightness:
    get:
      summary: Get LED brightness
      description: Get the current LED brightness level
      tags:
        - LED
      responses:
        '200':
          description: Current LED brightness level
          content:
            application/json:
              schema:
                type: object
                properties:
                  brightness:
                    type: integer
                    description: Current brightness level (0-255)
                    minimum: 0
                    maximum: 255
                    example: 191
                  max_brightness:
                    type: integer
                    description: Maximum possible brightness value
                    example: 255
    put:
      summary: Set LED brightness
      description: Update the LED brightness level
      tags:
        - LED
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - brightness
              properties:
                brightness:
                  type: integer
                  description: Brightness level to set (0-255)
                  minimum: 0
                  maximum: 255
                  example: 128
      responses:
        '200':
          description: Brightness updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Brightness updated successfully"
                  brightness:
                    type: integer
                    description: Current brightness level after update
                    example: 128
                  max_brightness:
                    type: integer
                    description: Maximum possible brightness value
                    example: 255
        '400':
          description: Invalid brightness value or missing parameter
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Brightness value out of range"
                  min:
                    type: integer
                    example: 0
                  max:
                    type: integer
                    example: 255
                  provided:
                    type: integer
                    example: 300

tags:
  - name: System
    description: System management and information endpoints
  - name: Authentication
    description: Authentication and security endpoints
  - name: OTA Updates
    description: Over-the-air firmware update endpoints
  - name: Network
    description: Network and WiFi management endpoints
  - name: Logging
    description: Log management and configuration endpoints
  - name: Custom MQTT
    description: Custom MQTT broker configuration and status endpoints
  - name: InfluxDB
    description: InfluxDB time-series database configuration and status endpoints
  - name: LED
    description: LED brightness control and status endpoints

components:
  schemas:
    SuccessResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        message:
          type: string
          example: "Operation completed successfully"
    
    ErrorResponse:
      type: object
      properties:
        success:
          type: boolean
          example: false
        error:
          type: string
          example: "Error message describing what went wrong"
    
    LogLevel:
      type: string
      enum: [VERBOSE, DEBUG, INFO, WARNING, ERROR, FATAL]
      description: Log level enumeration
    
    CustomMqttConfiguration:
      type: object
      required:
        - enabled
        - server
        - port
        - clientid
        - topic
        - frequency
        - useCredentials
      properties:
        enabled:
          type: boolean
          description: Whether custom MQTT is enabled
          example: true
        server:
          type: string
          description: MQTT broker server address or hostname
          example: "mqtt.example.com"
          maxLength: 64
        port:
          type: integer
          description: MQTT broker port number
          example: 1883
          minimum: 1
          maximum: 65535
        clientid:
          type: string
          description: Unique MQTT client identifier
          example: "energyme-home"
          maxLength: 32
        topic:
          type: string
          description: MQTT topic for publishing meter data
          example: "energy/meter"
          maxLength: 64
        frequency:
          type: integer
          description: Publishing frequency in seconds
          example: 10
          minimum: 1
          maximum: 3600
        useCredentials:
          type: boolean
          description: Whether to use username/password authentication
          example: true
        username:
          type: string
          description: MQTT username (required if useCredentials is true)
          example: "mqtt_user"
          maxLength: 32
        password:
          type: string
          description: MQTT password (required if useCredentials is true)
          example: "mqtt_password"
          maxLength: 64
    
    InfluxDbConfiguration:
      type: object
      required:
        - enabled
        - server
        - port
        - version
        - database
        - username
        - password
        - organization
        - bucket
        - token
        - measurement
        - frequency
        - useSSL
      properties:
        enabled:
          type: boolean
          description: Whether InfluxDB integration is enabled
          example: true
        server:
          type: string
          description: InfluxDB server address or hostname
          example: "localhost"
          maxLength: 64
        port:
          type: integer
          description: InfluxDB server port number
          example: 8086
          minimum: 1
          maximum: 65535
        version:
          type: integer
          description: InfluxDB version (1 or 2)
          example: 2
          enum: [1, 2]
        database:
          type: string
          description: Database name (InfluxDB v1)
          example: "energyme-home"
          maxLength: 64
        username:
          type: string
          description: Username for authentication (InfluxDB v1)
          example: "user"
          maxLength: 32
        password:
          type: string
          description: Password for authentication (InfluxDB v1)
          example: "password"
          maxLength: 64
        organization:
          type: string
          description: Organization name (InfluxDB v2)
          example: "my-org"
          maxLength: 64
        bucket:
          type: string
          description: Bucket name (InfluxDB v2)
          example: "energyme-home"
          maxLength: 64
        token:
          type: string
          description: Authentication token (InfluxDB v2)
          example: "my-token"
          maxLength: 64
        measurement:
          type: string
          description: Measurement name for data points
          example: "meter"
          maxLength: 64
        frequency:
          type: integer
          description: Data sending frequency in seconds
          example: 15
          minimum: 1
          maximum: 3600
        useSSL:
          type: boolean
          description: Whether to use HTTPS for connections
          example: false